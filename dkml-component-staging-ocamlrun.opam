opam-version: "2.0"
name: "dkml-component-staging-ocamlrun"
version: "4.12.1"
synopsis: "DKML component for ocamlrun"
description:
  "Standalone distribution of OCaml in <share>/staging-files containing just ocamlrun, the OCaml Stdlib and the other OCaml libraries (str, unix, bigarray, etc.)"
maintainer: ["opensource+diskuv-ocaml@support.diskuv.com"]
authors: ["Diskuv, Inc. <opensource+diskuv-ocaml@support.diskuv.com>"]
license: "Apache-2.0"
homepage: "https://github.com/diskuv/dkml-component-ocamlcompiler"
bug-reports: "https://github.com/diskuv/dkml-component-ocamlcompiler/issues"
depends: [
  "dkml-install"            {>= "0.1.0"}
  "dune"                    {>= "2.9"}
]
available: [ os = "macos" | os = "linux" | os = "win32" ]
build: [
  # OCaml source code
  ["install" "-d" "dl/ocaml/flexdll"]
  ["tar" "xCfz" "dl/ocaml"          "dl/ocaml.tar.gz"   "--strip-components=1"]
  ["tar" "xCfz" "dl/ocaml/flexdll"  "dl/flexdll.tar.gz" "--strip-components=1"]

  # Create a DKMLDIR. Its structure mimics a git submodule setup.
  #   <dkmldir>/vendor/drc/
  ["install" "-d" "dkmldir/vendor/drc"]
  ["tar" "xCfz" "dkmldir/vendor/drc" "dl/dkml-runtime-common.tar.gz" "--strip-components=1"]
  #   <dkmldir>/.dkmlroot
  ["install" "dkmldir/vendor/drc/.template.dkmlroot" "dkmldir/.dkmlroot"]

  #   <dkmldir>/vendor/dkml-compiler/
  ["install" "-d" "dkmldir/vendor/dkml-compiler/src"]
  ["tar" "xCfz" "dkmldir/vendor/dkml-compiler" "dl/dkml-compiler.tar.gz" "--strip-components=1"]

  # --------------
  # Build component and .api library
  # --------------

  ["dune" "subst"] {dev}
  [
    "dune"
    "build"
    "-p"
    name
    "-j"
    jobs
    "--promote-install-files=false"
    "@install"
    "@runtest" {with-test}
    "@doc" {with-doc}
  ]
  ["dune" "install" "-p" name "--create-install-files" name]
]
install: [
  # --------------
  # First pass
  # --------------

  # [1] Run r-c-ocaml-1-setup.sh
  [
    "env" "TOPDIR=dkmldir/vendor/drc/all/emptytop"
      "bash" "-x"
      "dkmldir/vendor/dkml-compiler/src/r-c-ocaml-1-setup.sh"
      "-d" "dkmldir"
      "-f" "src/ocaml-1"
      "-k" "vendor/dkml-compiler/src/standard-compiler-env-to-ocaml-configure-env.sh"
      "-v" "dl/ocaml"
      #   Host-compile into staging-files/<host-abi>
      "-t" "%{_:share}%/staging-files"
      "-pwindows_x86_64"  { os = "win32" }
      "-plinux_x86"       { os = "linux" & arch = "x86_32" }
      "-plinux_x86_64"    { os = "linux" & arch = "x86_64" }
      "-pdarwin_x86_64"   { os = "macos" }
      #   ABIs
      "-ewindows_x86_64"  { os = "win32" }
      "-elinux_x86"       { os = "linux" & arch = "x86_32" }
      "-elinux_x86_64"    { os = "linux" & arch = "x86_64" }
      "-edarwin_x86_64"   { os = "macos" }
      #   Cross-compile into staging-files/<cross-abi>
      "-g" "."
      #   Target architectures (if cross-compiling)
      "-adarwin_arm64=vendor/dkml-compiler/src/standard-compiler-env-to-ocaml-configure-env.sh" { os = "macos" }
      #     For any non cross-compiling platforms we save time and space by
      #     only building the runtime.
      "-r"                                        { os = "win32" | (os = "linux" & (arch = "x86_32" | arch = "x86_64")) }
  ]

  # [1] Run r-c-ocaml-2-build_host-noargs.sh
  [
    "sh" "-eufc"
    "cd '%{_:share}%/staging-files' && echo 1 && DKML_BUILD_TRACE=ON DKML_BUILD_TRACE_LEVEL=2 share/dkml/repro/100co/vendor/dkml-compiler/src/r-c-ocaml-2-build_host-noargs.sh"
  ]

  # [1] Run r-c-ocaml-3-build_cross-noargs.sh if cross-compiling,
  # which will place its output into staging-files/<cross-abi>
  # (confer: "-g" "%{_:share}%/staging-files")
  [
    "sh" "-eufc"
    "cd '%{_:share}%/staging-files' && share/dkml/repro/100co/vendor/dkml-compiler/src/r-c-ocaml-3-build_cross-noargs.sh"
  ] { os = "macos" }

  # --------------
  # Second pass
  #   For platforms that can do multiple _host_ ABIs _without_ cross-compiling.
  #   * MSVC can trivially do 32-bit and 64-bit without cross-compiling.
  #   * Most often Linux can as well as long as `gcc -m32` is configured.
  #     However for ease of use in GitHub Actions we expect Linux 32-bit and
  #     Linux 64-bit to be done with different Opam switches.
  # --------------

  # [2] Run r-c-ocaml-1-setup.sh
  [
    "env" "TOPDIR=dkmldir/vendor/drc/all/emptytop"
      "dkmldir/vendor/dkml-compiler/src/r-c-ocaml-1-setup.sh"
      "-d" "dkmldir"      
      "-f" "src/ocaml-2"
      "-r" # Build runtime only
      "-k" "vendor/dkml-compiler/src/standard-compiler-env-to-ocaml-configure-env.sh"
      "-v" "dl/ocaml"
      #   Host-compile into staging-files/<host-abi>
      "-t" "%{_:share}%/staging-files"
      "-pwindows_x86"     { os = "win32" }
      #   ABIs
      "-ewindows_x86"     { os = "win32" }
  ] { !(os = "macos") & !(os = "linux") }

  # [2] Run r-c-ocaml-2-build_host-noargs.sh
  [
    "sh" "-eufc"
    "cd '%{_:share}%/staging-files' && echo 2 && DKML_BUILD_TRACE=ON DKML_BUILD_TRACE_LEVEL=2 share/dkml/repro/100co/vendor/dkml-compiler/src/r-c-ocaml-2-build_host-noargs.sh"
  ] { !(os = "macos") & !(os = "linux") }

  # --------------
  # Clean build files
  # --------------

  [ "rm" "-rf" "%{_:share}%/staging-files/share" ]
  [ "rm" "-rf" "%{_:share}%/staging-files/src" ]
]
dev-repo: "git+https://github.com/diskuv/dkml-component-ocamlcompiler.git"
extra-source "dl/ocaml.tar.gz" {
  src: "https://github.com/ocaml/ocaml/archive/4.12.1.tar.gz"
  checksum: "sha256=f5a48a90557cb47ace7b1590fcab1362a1af38629a218350f69c225c57e96a41"
}
extra-source "dl/flexdll.tar.gz" {
  src: "https://github.com/alainfrisch/flexdll/archive/0.39.tar.gz"
  checksum: "sha256=51a6ef2e67ff475c33a76b3dc86401a0f286c9a3339ee8145053ea02d2fb5974"
}
extra-source "dl/dkml-compiler.tar.gz" {
  src: "https://github.com/diskuv/dkml-compiler/archive/refs/tags/v4.12.1-prerel11.tar.gz"
  checksum: [
    "md5=d8c46fef8df02a89db552e20b572e481"
    "sha256=27675482efe46a762b66db09a2c1e7ff6671cdd8df62aace709e80a7519310b3"
  ]
}
extra-source "dl/dkml-runtime-common.tar.gz" {
  src: "https://github.com/diskuv/dkml-runtime-common/archive/refs/tags/v0.4.0-prerel67.tar.gz"
  checksum: [
    "sha256=4420f0d550c9d95af455950edf621d661166d37f953dee3d91e4d62003550c31"
  ]
}
extra-source "dl/dkml-runtime-distribution.tar.gz" {
  src: "https://github.com/diskuv/dkml-runtime-distribution/archive/refs/tags/v0.4.0-prerel67.tar.gz"
  checksum: [
    "sha256=c7fa09acdcafd25a814b3eb65e521555b5d02ba1f39f73df6a5f3c1d18c56565"
  ]
}
